<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <bean id="MinuteJob" class="org.springframework.scheduling.quartz.JobDetailFactoryBean">
        <property name="jobClass" value="com.xzy.springbootapi.admin.quartz.job.MinuteJob"/>
        <property name="group" value="Minute" />
        <property name="name" value="job1" />
        <property name="durability" value="true" />
    </bean>

    <bean id="chinaTimeZone" class="java.util.TimeZone" factory-method="getTimeZone">
        <constructor-arg value="Asia/Shanghai"></constructor-arg>
    </bean>

    <!-- 每分钟0秒执行一次-->
    <bean id="MinuteTrigger01" class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">
        <property name="jobDetail" ref="MinuteJob" />
        <property name="group" value="Minute" />
        <property name="name" value="trigger01" />
        <property name="timeZone" ref="chinaTimeZone" />
        <property name="cronExpression" value="0 * * * * ?" />
    </bean>

    <bean id="quartzDataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
        <property name="driverClassName" value="${spring.datasource.driver-class-name}"/>
        <property name="url" value="${spring.datasource.url}"/>
        <property name="username" value="${spring.datasource.username}"/>
        <property name="password" value="${spring.datasource.password}"/>
        <property name="initialSize" value="${spring.datasource.initialSize}"/>
        <property name="maxActive" value="${spring.datasource.maxActive}"/>
        <property name="minIdle" value="${spring.datasource.minIdle}"/>
        <property name="poolPreparedStatements" value="${spring.datasource.poolPreparedStatements}"/>
        <property name="validationQuery" value="${spring.datasource.validationQuery}"/>
        <property name="testWhileIdle" value="${spring.datasource.testWhileIdle}"/>
        <property name="timeBetweenEvictionRunsMillis" value="${spring.datasource.timeBetweenEvictionRunsMillis}"/>
        <property name="minEvictableIdleTimeMillis" value="${spring.datasource.minEvictableIdleTimeMillis}"/>
        <property name="testOnBorrow" value="${spring.datasource.testOnBorrow}"/>
    </bean>
    <bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">

        <property name="jobDetails">
            <list>
                <ref bean="MinuteJob" />
            </list>
        </property>
        <property name="triggers">
            <list>
                <ref bean="MinuteTrigger01" />
            </list>
        </property>
        <property name="schedulerName" value="QuartzScheduler" />
        <property name="dataSource" ref="quartzDataSource" />
        <property name="applicationContextSchedulerContextKey" value="applicationContextKey" />

        <property name="overwriteExistingJobs" value="true" />

        <property name="quartzProperties">
            <props>
                <!-- Configure Main Scheduler Properties -->
                <prop key="org.quartz.scheduler.instanceName">QuartzScheduler</prop>
                <prop key="org.quartz.scheduler.instanceId">Auto</prop>
                <!-- Configure ThreadPool -->
                <prop key="org.quartz.threadPool.class">org.quartz.simpl.SimpleThreadPool</prop>
                <prop key="org.quartz.threadPool.threadCount">5</prop>
                <prop key="org.quartz.threadPool.threadPriority">5</prop>
                <!-- Configure JobStore -->
                <prop key="org.quartz.jobStore.misfireThreshold">60000</prop>
                <prop key="org.quartz.jobStore.class">org.quartz.impl.jdbcjobstore.JobStoreTX</prop>
                <prop key="org.quartz.jobStore.tablePrefix">QRTZ_</prop>
                <prop key="org.quartz.jobStore.dataSource">dataSource</prop>
                <prop key="org.quartz.jobStore.isClustered">true</prop>
                <prop key="org.quartz.jobStore.clusterCheckinInterval">15000</prop>
            </props>
        </property>

    </bean>

    <context:annotation-config/>
</beans>
